name: e2e_ppo_trainer

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  pull_request:
    branches:
      - main
      - v0.2.x
    paths:
      - "**/*.py"
      - "verl/trainer/config/*.yaml"
      - .github/workflows/e2e_ppo_trainer.yml
      - "tests/e2e/*gsm8k*.sh"
      - "!recipe/**"
      - "!verl/trainer/config/ppo_megatron_trainer.yaml"
      - "!verl/workers/**/megatron_*.py"

# Cancel jobs on the same ref if a new one is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

# Declare permissions just read content.
permissions: 
  contents: read

jobs:
  e2e_ppo_trainer_function_rm:
    runs-on: [L20x2]
    timeout-minutes: 40 # Increase this timeout value as needed
    env:
      HTTP_PROXY: ${{ secrets.PROXY_HTTP }}
      HTTPS_PROXY: ${{ secrets.PROXY_HTTPS }}
      NO_PROXY: "localhost,127.0.0.1"
      HF_HUB_ENABLE_HF_TRANSFER: 1
    container:
      image: hiyouga/verl:ngc-th2.6.0-cu120-vllm0.8.2
      options: --gpus all --shm-size=10g
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
            fetch-depth: 0
      - name: Install the current repository
        run: |
          pip3 install hf_transfer
          pip3 install -e .[test,gpu]
      - name: Prepare gsm8k dataset
        run: |
          ray stop --force
          python3 examples/data_preprocess/gsm8k.py
      # TODO: Checkpoints saveing and resuming w/o Megatron
      - name: Running gsm8k e2e training tests on 8 L20 GPUs with rmpad using function rm
        run: |
          ray stop --force
          bash tests/e2e/ppo_trainer/run_function_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e without rmpad using function rm
        run: |
          ray stop --force
          RM_PAD=False bash tests/e2e/ppo_trainer/run_function_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e training tests on 8 L20 GPUs with rmpad using function rm (GRPO)
        run: |
          ray stop --force
          ADV_ESTIMATOR=grpo USE_KL=True bash tests/e2e/ppo_trainer/run_function_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e training tests on 8 L20 GPUs with rmpad using function rm (ReMax)
        run: |
          ray stop --force
          ADV_ESTIMATOR=remax USE_KL=True bash tests/e2e/ppo_trainer/run_function_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e training tests on 8 L20 GPUs with rmpad using customized reward function
        run: |
          ray stop --force
          CUSTOM_REWARD_FN=True tests/e2e/ppo_trainer/run_function_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e training tests on 8 L20 GPUs with rmpad using function rm with in-reward kl and kl loss
        run: |
          ray stop --force
          USE_KL=True bash tests/e2e/ppo_trainer/run_function_rm_gsm8k_qwen.sh

  e2e_ppo_trainer_model_rm:
    runs-on: [L20x2]
    timeout-minutes: 40 # Increase this timeout value as needed
    env:
      HTTP_PROXY: ${{ secrets.PROXY_HTTP }}
      HTTPS_PROXY: ${{ secrets.PROXY_HTTPS }}
      NO_PROXY: "localhost,127.0.0.1"
      HF_HUB_ENABLE_HF_TRANSFER: 1
    container:
      image: hiyouga/verl:ngc-th2.6.0-cu120-vllm0.8.2
      options: --gpus all --shm-size=10g
    steps:
      - name: Running gsm8k e2e with rmpad using model rm
        run: |
          ray stop --force
          bash tests/e2e/ppo_trainer/run_model_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e without rmpad using model rm
        run: |
          ray stop --force
          RM_PAD=False bash tests/e2e/ppo_trainer/run_model_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e with rmpad using model rm and ulysses sp=2
        run: |
          ray stop --force
          SP_SIZE=2 bash tests/e2e/ppo_trainer/run_model_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e with rmpad using model rm and dynamic batch size
        run: |
          ray stop --force
          SEQ_BALANCE=True bash tests/e2e/ppo_trainer/run_model_rm_gsm8k_qwen.sh
      - name: Running gsm8k e2e with rmpad using model rm with Liger Kernel enabled
        run: |
          ray stop --force
          LIGER=True bash tests/e2e/ppo_trainer/run_model_rm_gsm8k_qwen.sh


